/*
 * Copyright 2000-2025 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    ext.kotlinVersion = '1.9.25'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}

import org.jetbrains.intellij.platform.gradle.TestFrameworkType

plugins {
    id 'org.jetbrains.intellij.platform' version '2.4.0'
}

version = '0.1.1'
if (System.hasProperty('build.number')) {
    version = "$version.${System.getProperty('build.number')}"
}
repositories {
    mavenCentral()

    intellijPlatform {
        defaultRepositories()
    }
}

apply plugin: 'org.jetbrains.intellij.platform'
apply plugin: 'kotlin'
apply plugin: 'idea'

dependencies {
    intellijPlatform {
        intellijIdeaCommunity '2023.3'

        testFramework TestFrameworkType.Platform.INSTANCE
    }

    testImplementation 'junit:junit:4.13.2'
}

intellijPlatform {
    buildSearchableOptions = true
    instrumentCode = true
    projectName = 'intellij-tickscript'

    pluginConfiguration {
        ideaVersion {
            untilBuild = provider { null }
        }
    }
}
intellijPlatformTesting {
    runIde
    testIde
}

sourceCompatibility = '17'
targetCompatibility = '17'

sourceSets {
    main {
        java {
            srcDirs 'src/java', 'gen'
        }
        kotlin {
            srcDir 'src/kotlin'
        }
        resources {
            srcDir 'res'
        }
    }
    test {
        java {
            srcDir 'test/java'
        }
        kotlin {
            srcDir 'test/kotlin'
        }
        resources {
            srcDir 'test-data'
        }
    }
}

if (System.getenv('TEAMCITY_VERSION') != null) {
    test.ignoreFailures = true
} else {
//test.testLogging.showStandardStreams = true
}

wrapper {
    gradleVersion = '8.13'
    distributionType = Wrapper.DistributionType.BIN
}
